// –ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç—ã
const bgMusic = document.getElementById("bg-music");
// Note: audioPlayer, playPauseBtn, prevBtn, nextBtn, musicTitle, musicCover are not present in index.html for the provided snippet,
// so their functionality will not be active or will cause errors if elements are missing.
// Assuming these are part of a larger application not fully provided.
// For this specific issue (text corruption), these are not directly relevant.
// Removed them from this solution for clarity, but keep them in your full code if needed.


// --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ ---

// –í–∑—Ä—ã–≤ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
function launchConfetti() {
  const myConfetti = confetti.create(document.getElementById('confetti-canvas'), {
    resize: true,
    useWorker: true
  });

  myConfetti({
    particleCount: 200,
    spread: 120,
    origin: { y: 0.6 },
    colors: ['#ffc0cb', '#d8bfd8', '#a8f0ff', '#ffffff']
  });

  myConfetti({
    particleCount: 100,
    spread: 90,
    origin: { x: 0.1, y: 0.7 },
    colors: ['#ffc0cb', '#d8bfd8', '#a8f0ff', '#ffffff']
  });
  myConfetti({
    particleCount: 100,
    spread: 90,
    origin: { x: 0.9, y: 0.7 },
    colors: ['#ffc0cb', '#d8bfd8', '#a8f0ff', '#ffffff']
  });
}

// –ü–∞–¥–∞—é—â–∏–µ —Å–µ—Ä–¥–µ—á–∫–∏/—Å–∞–∫—É—Ä–∞
const fallingItems = ['‚ù§Ô∏è', 'üå∏'];
let fallingInterval;

function startFallingItems() {
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤
  stopFallingItems();
  fallingInterval = setInterval(() => {
    const item = document.createElement('div');
    item.classList.add('falling-item');
    item.textContent = fallingItems[Math.floor(Math.random() * fallingItems.length)];
    item.style.left = `${Math.random() * 100}vw`;
    item.style.fontSize = `${Math.random() * 20 + 15}px`;
    item.style.animationDuration = `${Math.random() * 5 + 5}s`;

    document.body.appendChild(item);

    item.addEventListener('animationend', () => {
      item.remove();
    });
  }, 300);
}

function stopFallingItems() {
  clearInterval(fallingInterval);
  document.querySelectorAll('.falling-item').forEach(item => item.remove());
}

// Placeholder for music functions, as they are not fully provided in the HTML/CSS
function playBgMusic() {
  if (bgMusic) {
    bgMusic.play().catch(e => console.error("Error playing background music:", e));
  }
}

function stopBgMusic() {
  if (bgMusic) {
    bgMusic.pause();
    bgMusic.currentTime = 0; // Reset to start
  }
}

function pauseCurrentTrack() {
  // Assuming audioPlayer exists in your full code
  // if (audioPlayer) {
  //   audioPlayer.pause();
  //   isPlaying = false;
  //   if (playPauseBtn) playPauseBtn.textContent = "‚ñ∂Ô∏è";
  // }
}


// --- –î–∞—Ç–∞ –î–Ω—è –†–æ–∂–¥–µ–Ω–∏—è –ê–ª–∏—Å—ã (–ú–µ—Å—è—Ü –∏ –î–µ–Ω—å) ---
const BIRTHDAY_MONTH = 4; // –ú–∞–π (–º–µ—Å—è—Ü—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0, —Ç–∞–∫ —á—Ç–æ 4 = –º–∞–π)
const BIRTHDAY_DAY = 19; // 19 —á–∏—Å–ª–æ


// --- –ú–∞—Å—Å–∏–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π ---
// Changed to use plain text and let typeWriter handle line breaks (or just set innerHTML directly for simplicity)
const greetings = [
  `–î–æ—Ä–æ–≥–∞—è –ê–ª–∏—Å–∞!\n\n
–° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è —Ç–µ–±—è, —Å–æ–ª–Ω—Ü–µ ‚òÄÔ∏è\n
–ü—É—Å—Ç—å –≤ –∂–∏–∑–Ω–∏ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ —Å–≤–µ—Ç–∞, —Ç–µ–ø–ª–∞, –ª—é–±–≤–∏ –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞.\n
–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä —è—Ä—á–µ, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–∞—è—Å—å —Å–æ–±–æ–π.\n
–Ø –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —Ä–∞–¥, —á—Ç–æ —Ç—ã –µ—Å—Ç—å.\n\n
–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Å—Ç–∞–≤–∞–π –º–µ—á—Ç–∞—Ç—å ‚Äî —Ç—ã –¥–æ—Å—Ç–æ–π–Ω–∞ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æüíó\n\n
–° –ª—é–±–æ–≤—å—é –∏ —Å–∞–º—ã–º–∏ —Ç—ë–ø–ª—ã–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏ üí´\n\n`,

  `–ú–æ—è —á—É–¥–µ—Å–Ω–∞—è –ê–ª–∏—Å–∞!\n\n
–° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π —Ç–≤–æ–π –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Ä–∞–¥–æ—Å—Ç—å—é,
—É–ª—ã–±–∫–∞–º–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º. –ñ–µ–ª–∞—é —Ç–µ–±–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∞–º—ã—Ö –∑–∞–≤–µ—Ç–Ω—ã—Ö –∂–µ–ª–∞–Ω–∏–π,
–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π –∏ –∏—Å–∫—Ä–µ–Ω–Ω–µ–π –ª—é–±–≤–∏.\n\n
–ë—É–¥—å —Å—á–∞—Å—Ç–ª–∏–≤–∞, —Å–∏—è–π —è—Ä—á–µ –∑–≤—ë–∑–¥!\n\n
–û–±–Ω–∏–º–∞—é –∫—Ä–µ–ø–∫–æ! ‚ú®\n\n`,

  `–° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è, –ê–ª–∏—Å–∞!\n\n
–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å, –∏ –ø—É—Å—Ç—å –æ–Ω –±—É–¥–µ—Ç —Ç–∞–∫–∏–º –∂–µ –æ—Å–æ–±–µ–Ω–Ω—ã–º,
–∫–∞–∫ –∏ —Ç—ã! –ñ–µ–ª–∞—é —Ç–µ–±–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–≥–æ —Å—á–∞—Å—Ç—å—è, –∑–¥–æ—Ä–æ–≤—å—è,
—É—Å–ø–µ—Ö–æ–≤ –≤–æ –≤—Å–µ—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏—è—Ö –∏ —á—Ç–æ–±—ã —Ä—è–¥–æ–º –≤—Å–µ–≥–¥–∞ –±—ã–ª–∏
—Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –±–ª–∏–∑–∫–∏–µ –∏ –ª—é–±—è—â–∏–µ –ª—é–¥–∏.\n\n
–¢—ã –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è! ‚ù§Ô∏è\n\n`,

  `–ê–ª–∏—Å–∞, —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º!\n\n
–ü—É—Å—Ç—å —ç—Ç–æ—Ç –≥–æ–¥ –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ç–µ–±–µ –º–Ω–æ–≥–æ –Ω–æ–≤—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π,
—è—Ä–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤ –∏ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã—Ö –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π. –ñ–µ–ª–∞—é, —á—Ç–æ–±—ã
–≤—Å–µ —Ç–≤–æ–∏ –º–µ—á—Ç—ã —Å–±—ã–≤–∞–ª–∏—Å—å, –∞ –∂–∏–∑–Ω—å –±—ã–ª–∞ –ø–æ–ª–Ω–∞ –≥–∞—Ä–º–æ–Ω–∏–∏
–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö —ç–º–æ—Ü–∏–π.\n\n
–í—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ! üéâ\n\n`
];


// --- –ö–Ω–æ–ø–∫–∞ ¬´–û—Ç–∫—Ä—ã—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ¬ª ---
document.getElementById("openBtn").addEventListener("click", () => {
  vibrate();
  document.getElementById("main-buttons").classList.add("hidden");
  document.getElementById("mainMessage").classList.add("show");
  document.getElementById("backBtn").classList.remove("hidden");

  const messageParagraph = document.querySelector("#mainMessage p");
  const today = new Date();
  const currentYear = today.getFullYear();

  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Date –¥–ª—è –î–Ω—è –†–æ–∂–¥–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É
  const birthdayThisYear = new Date(currentYear, BIRTHDAY_MONTH, BIRTHDAY_DAY);
  // –û–±–Ω—É–ª—è–µ–º –≤—Ä–µ–º—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø–æ –¥–∞—Ç–µ
  today.setHours(0, 0, 0, 0);
  birthdayThisYear.setHours(0, 0, 0, 0);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—É –î–Ω—è –†–æ–∂–¥–µ–Ω–∏—è –≤ —Å–ª–µ–¥—É—é—â–µ–º –≥–æ–¥—É, –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —É–∂–µ –ø—Ä–æ—à–µ–ª
  let nextBirthdayYear = currentYear;
  if (today > birthdayThisYear) {
      nextBirthdayYear = currentYear + 1;
  }
  const nextBirthday = new Date(nextBirthdayYear, BIRTHDAY_MONTH, BIRTHDAY_DAY);
  nextBirthday.setHours(0, 0, 0, 0);

  // Clear any previous typewriter effect before starting a new one
  if (typeWriterTimeout) {
      clearTimeout(typeWriterTimeout);
      typeWriterTimeout = null;
  }
  messageParagraph.innerHTML = ""; // Ensure the paragraph is truly empty

  if (today < nextBirthday) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—É–ø–∏–ª –ª–∏ —É–∂–µ –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è
    // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Ä–∞–Ω—å—à–µ –î–Ω—è –†–æ–∂–¥–µ–Ω–∏—è
    const remainingDays = Math.ceil((nextBirthday.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));
    messageParagraph.innerHTML = `
      <p style="font-size: 1.2em; line-height: 1.5; text-shadow: 1px 1px 3px rgba(0,0,0,0.8);">
        –û–π, —Ç—ã —Å—é–¥–∞ –ø–æ–ø–∞–ª —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ!<br>
        –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –ê–ª–∏—Å—ã!<br><br>
        –û—Å—Ç–∞–ª–æ—Å—å ${remainingDays} –¥–Ω–µ–π... ü§´
      </p>
    `;
    stopBgMusic();
    stopFallingItems();
    pauseCurrentTrack(); // –û—Å—Ç–∞–Ω–∞–≤–∏–º –º—É–∑—ã–∫—É –ø–ª–µ–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω–∞ –∏–≥—Ä–∞–µ—Ç
  } else {
    // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –∏–ª–∏ —É–∂–µ –ø–æ—Å–ª–µ (—Ç.–µ. –∑–∞–≥–ª—É—à–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞)
    const randomIndex = Math.floor(Math.random() * greetings.length);
    const selectedGreeting = greetings[randomIndex];
    // Use the updated typeWriter which handles plain text with \n
    typeWriter(messageParagraph, selectedGreeting, 50);
    playBgMusic();
    launchConfetti();
    startFallingItems();
    pauseCurrentTrack(); // –û—Å—Ç–∞–Ω–∞–≤–∏–º –º—É–∑—ã–∫—É –ø–ª–µ–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω–∞ –∏–≥—Ä–∞–µ—Ç
  }
});

// --- –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ ---
document.getElementById("check-secret").addEventListener("click", () => {
  vibrate();
  const value = document.getElementById("secret-input").value.trim().toLowerCase();
  const div = document.getElementById("secret-message");

  document.getElementById("main-buttons").classList.add("hidden");
  div.style.display = 'block';
  document.getElementById("backBtn").classList.remove("hidden");

  // Clear any previous typewriter effect if it was active
  if (typeWriterTimeout) {
      clearTimeout(typeWriterTimeout);
      typeWriterTimeout = null;
  }
  div.innerHTML = ""; // Clear the secret message div too

  if (value === "—á—É–¥–æ" || value === "—Ç—ã –º–æ—ë —á—É–¥–æ") {
    div.innerHTML = "üéâ –¢—ã –≤–≤–µ–ª–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ: —Ç—ã –º–æ—ë —á—É–¥–æ! üíñ";
  } else {
    div.innerHTML = "üòÖ –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!";
  }
  stopBgMusic(); // –û—Å—Ç–∞–Ω–∞–≤–∏–º —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –∏–≥—Ä–∞–µ—Ç
  stopFallingItems(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã, –µ—Å–ª–∏ —Å–ª—É—á–∞–π–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å
  pauseCurrentTrack(); // –û—Å—Ç–∞–Ω–∞–≤–∏–º –º—É–∑—ã–∫—É –ø–ª–µ–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω–∞ –∏–≥—Ä–∞–µ—Ç
});

// --- –ö–Ω–æ–ø–∫–∞ ¬´–ú—É–∑—ã–∫–∞¬ª ---
// Placeholder if you add these buttons in index.html
// document.getElementById("musicBtn").addEventListener("click", () => {
//   vibrate();
//   document.getElementById("main-buttons").classList.add("hidden");
//   document.getElementById("musicPlayer").classList.remove("hidden");
//   document.getElementById("backBtn").classList.remove("hidden");
  
//   // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ play/pause
//   // playPauseBtn.textContent = isPlaying ? "‚è∏" : "‚ñ∂Ô∏è";
//   stopBgMusic(); // –û—Å—Ç–∞–Ω–∞–≤–∏–º —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–ª–µ–µ—Ä–∞
//   stopFallingItems(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã, –µ—Å–ª–∏ —Å–ª—É—á–∞–π–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å
// });


// --- –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª ---
document.getElementById("backBtn").addEventListener("click", () => {
  vibrate();
  document.getElementById("main-buttons").classList.remove("hidden");
  document.getElementById("mainMessage").classList.remove("show");
  document.getElementById("secret-message").style.display = "none";
  // document.getElementById("musicPlayer").classList.add("hidden"); // Uncomment if you add musicPlayer
  document.getElementById("backBtn").classList.add("hidden");
  
  pauseCurrentTrack(); // Will only work if audioPlayer exists
  stopBgMusic();
  stopFallingItems(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–¥–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ

  // Crucially, stop the typewriter effect when going back
  if (typeWriterTimeout) {
      clearTimeout(typeWriterTimeout);
      typeWriterTimeout = null;
  }
  document.querySelector("#mainMessage p").innerHTML = ""; // Clear the content immediately
});

// --- –ü–µ—á–∞—Ç—å —Ç–µ–∫—Å—Ç–∞ –ø–æ –±—É–∫–≤–∞–º ---
let typeWriterTimeout = null; // Initialize to null

function typeWriter(element, text, speed) {
  // Clear any existing timeout to prevent multiple concurrent animations
  if (typeWriterTimeout) {
    clearTimeout(typeWriterTimeout);
    typeWriterTimeout = null; // Reset to null after clearing
  }

  element.innerHTML = ""; // Ensure the element is completely empty before starting
  let i = 0;
  const chars = text.split(''); // Convert text to an array of characters for easier iteration

  function type() {
    if (i < chars.length) {
      // Replace '\n' with '<br>' directly as we iterate through plain characters
      element.innerHTML += (chars[i] === '\n' ? '<br>' : chars[i]);
      i++;
      typeWriterTimeout = setTimeout(type, speed);
    } else {
      typeWriterTimeout = null; // Clear timeout when typing is complete
    }
  }
  type();
}


// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ---
document.addEventListener('DOMContentLoaded', () => {
  // initAudio(); // Removed as audioPlayer related elements are not in the provided index.html
  
  // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞—É–¥–∏–æ –ø–æ –ø–µ—Ä–≤–æ–º—É –∫–ª–∏–∫—É
  document.body.addEventListener('click', () => {
    // if (audioPlayer) audioPlayer.play().then(() => audioPlayer.pause()).catch(e => console.warn("Audio activation failed:", e));
    if (bgMusic) bgMusic.play().then(() => bgMusic.pause()).catch(e => console.warn("Background audio activation failed:", e));
  }, { once: true });
});

// Vibraion function (keep it)
function vibrate(duration = 100) {
    if ('vibrate' in navigator) navigator.vibrate(duration);
}

// NOTE: Audio player related event listeners (playPauseBtn, prevBtn, nextBtn, audioPlayer.addEventListener('ended'))
// are commented out or not included as the necessary HTML elements for them were not in your provided index.html.
// Please ensure you have those elements in your index.html if you want the audio player to function.
