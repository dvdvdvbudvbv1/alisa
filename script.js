// –ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç—ã
const bgMusic = document.getElementById("bg-music");
const audioPlayer = document.getElementById("audioPlayer");
const playPauseBtn = document.getElementById("playPauseBtn");
const prevBtn = document.getElementById("prevBtn");
const nextBtn = document.getElementById("nextBtn");
const musicTitle = document.querySelector(".music-title");
const musicCover = document.querySelector(".music-cover");

// –¢—Ä–µ–∫–∏
const tracks = [
  { title: "The Way I See Things", src: encodeURI("./tracks/01 the way u see things.mp3"), cover: "./default_cover.png" },
  { title: "OMG", src: encodeURI("./tracks/02 OMG.mp3"), cover: "./default_cover.png" },
  { title: "The Song They Played (When I Crashed)", src: encodeURI("./tracks/03 The Song They Played (When I Crashed).mp3"), cover: "./default_cover.png" },
  { title: "Nothing To Do", src: encodeURI("./tracks/04 Nothing To Do.mp3"), cover: "./default_cover.png" },
  { title: "OM.Nomnom", src: encodeURI("./tracks/05 OM.Nomnom.mp3"), cover: "./default_cover.png" },
  { title: "When I Lie (but the door slaps kinda)", src: encodeURI("./tracks/06 When I Lie (but the door slaps kinda).mp3"), cover: "./default_cover.png" },
  { title: "Star Shopping", src: encodeURI("./tracks/07 Star Shopping.mp3"), cover: "./default_cover.png" },
  { title: "Walk Away In The Door (demo F_ck)", src: encodeURI("./tracks/08 Walk Away In The Door (demo F_ck).mp3"), cover: "./default_cover.png" },
  { title: "Absolute in Doubt", src: encodeURI("./tracks/09 Absolute in Doubt.mp3"), cover: "./default_cover.png" },
  { title: "Hell Like", src: encodeURI("./tracks/10 Hell Like.mp3"), cover: "./default_cover.png" },
  { title: "promised (unreleased)", src: encodeURI("./tracks/11 promised (unreleased).flac"), cover: "./default_cover.png" },
  { title: "Still Alive (feat lido) (for a day)", src: encodeURI("./tracks/12 Still Alive (feat lido) (for a day).wav"), cover: "./default_cover.png" },
  { title: "wxtd", src: encodeURI("./tracks/wxtd.mp3"), cover: "./default_cover.png" }
];

let currentTrack = 0;
let isPlaying = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ
function initAudio() {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  audioPlayer.preload = "auto";
  bgMusic.preload = "auto";
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
  audioPlayer.addEventListener('error', (e) => {
    console.error("Audio Player Error:", e);
    musicTitle.textContent = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–∫–∞";
    setTimeout(playNextTrack, 2000);
  });

  bgMusic.addEventListener('error', (e) => {
    console.error("Background Music Error:", e);
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Ç—Ä–µ–∫–∞
  loadTrack(currentTrack);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–µ–∫–∞
function loadTrack(index) {
  const track = tracks[index];
  console.log("Loading track:", track.src);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–∫–∞
  fetch(track.src)
    .then(response => {
      if (!response.ok) throw new Error("Track not found");
      
      audioPlayer.src = track.src;
      musicTitle.textContent = track.title;
      musicCover.src = track.cover;

      // –ü–æ–ø—ã—Ç–∫–∞ —á—Ç–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
      jsmediatags.read(track.src, {
        onSuccess: function(tag) {
          const tags = tag.tags;
          if (tags.title) musicTitle.textContent = tags.title;
          if (tags.artist) musicTitle.textContent += ` - ${tags.artist}`;
          
          if (tags.picture) {
            const base64String = btoa(String.fromCharCode(...tags.picture.data));
            musicCover.src = `data:${tags.picture.format};base64,${base64String}`;
          }
        },
        onError: () => console.log("No metadata found")
      });

      if (isPlaying) {
        audioPlayer.play().catch(e => console.error("Play error:", e));
      }
    })
    .catch(error => {
      console.error("Track load error:", error);
      playNextTrack();
    });
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º
function playCurrentTrack() {
  audioPlayer.play()
    .then(() => {
      isPlaying = true;
      playPauseBtn.textContent = "‚è∏";
      stopBgMusic();
    })
    .catch(e => {
      console.error("Play failed:", e);
      // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞—É–¥–∏–æ
      if (e.name === 'NotAllowedError') {
        musicTitle.textContent = "–ù–∞–∂–º–∏—Ç–µ '‚ñ∂Ô∏è' –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏";
      }
    });
}

function pauseCurrentTrack() {
  audioPlayer.pause();
  isPlaying = false;
  playPauseBtn.textContent = "‚ñ∂Ô∏è";
}

function playNextTrack() {
  currentTrack = (currentTrack + 1) % tracks.length;
  loadTrack(currentTrack);
  if (isPlaying) playCurrentTrack();
}

function playPrevTrack() {
  currentTrack = (currentTrack - 1 + tracks.length) % tracks.length;
  loadTrack(currentTrack);
  if (isPlaying) playCurrentTrack();
}

// –§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞
function playBgMusic() {
  bgMusic.play()
    .then(() => console.log("Background music playing"))
    .catch(e => console.error("BG music play error:", e));
}

function stopBgMusic() {
  bgMusic.pause();
  bgMusic.currentTime = 0;
}

// –í–∏–±—Ä–∞—Ü–∏—è
function vibrate(duration = 100) {
  if ('vibrate' in navigator) navigator.vibrate(duration);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
  initAudio();
  
  // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞—É–¥–∏–æ –ø–æ –ø–µ—Ä–≤–æ–º—É –∫–ª–∏–∫—É
  document.body.addEventListener('click', () => {
    audioPlayer.play().then(() => audioPlayer.pause());
    bgMusic.play().then(() => bgMusic.pause());
  }, { once: true });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
playPauseBtn.addEventListener("click", () => {
  vibrate();
  isPlaying ? pauseCurrentTrack() : playCurrentTrack();
});

prevBtn.addEventListener("click", () => {
  vibrate();
  playPrevTrack();
});

nextBtn.addEventListener("click", () => {
  vibrate();
  playNextTrack();
});

audioPlayer.addEventListener('ended', playNextTrack);

// –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ, —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ –∏ —Ç.–¥.) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
// ... (–∫–æ–¥ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞)
// --- –ö–Ω–æ–ø–∫–∞ ¬´–û—Ç–∫—Ä—ã—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ¬ª ---
document.getElementById("openBtn").addEventListener("click", () => {
  vibrate();
  document.getElementById("main-buttons").classList.add("hidden");
  document.getElementById("mainMessage").classList.add("show");
  document.getElementById("backBtn").classList.remove("hidden");

  const messageParagraph = document.querySelector("#mainMessage p");
  const fullText = `–î–æ—Ä–æ–≥–∞—è –ê–ª–∏—Å–∞!<br><br>
–° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è —Ç–µ–±—è, —Å–æ–ª–Ω—Ü–µ ‚òÄÔ∏è<br>
–ü—É—Å—Ç—å –≤ –∂–∏–∑–Ω–∏ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ —Å–≤–µ—Ç–∞, —Ç–µ–ø–ª–∞, –ª—é–±–≤–∏ –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞.<br>
–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä —è—Ä—á–µ, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–∞—è—Å—å —Å–æ–±–æ–π.<br>
–Ø –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —Ä–∞–¥, —á—Ç–æ —Ç—ã –µ—Å—Ç—å.<br><br>
–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Å—Ç–∞–≤–∞–π –º–µ—á—Ç–∞—Ç—å ‚Äî —Ç—ã –¥–æ—Å—Ç–æ–π–Ω–∞ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æüíó<br><br>
–° –ª—é–±–æ–≤—å—é –∏ —Å–∞–º—ã–º–∏ —Ç—ë–ø–ª—ã–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏ üí´<br><br>`;
  typeWriter(messageParagraph, fullText, 50);
  playBgMusic();
});

// --- –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ ---
document.getElementById("check-secret").addEventListener("click", () => {
  vibrate();
  const value = document.getElementById("secret-input").value.trim().toLowerCase();
  const div = document.getElementById("secret-message");

  document.getElementById("main-buttons").classList.add("hidden");
  div.style.display = 'block';
  document.getElementById("backBtn").classList.remove("hidden");

  if (value === "—á—É–¥–æ" || value === "—Ç—ã –º–æ—ë —á—É–¥–æ") {
    div.innerHTML = "üéâ –¢—ã –≤–≤–µ–ª–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ: —Ç—ã –º–æ—ë —á—É–¥–æ! üíñ";
  } else {
    div.innerHTML = "üòÖ –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!";
  }
});

// --- –ö–Ω–æ–ø–∫–∞ ¬´–ú—É–∑—ã–∫–∞¬ª ---
document.getElementById("musicBtn").addEventListener("click", () => {
  vibrate();
  document.getElementById("main-buttons").classList.add("hidden");
  document.getElementById("musicPlayer").classList.remove("hidden");
  document.getElementById("backBtn").classList.remove("hidden");
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ play/pause
  playPauseBtn.textContent = isPlaying ? "‚è∏" : "‚ñ∂Ô∏è";
});

// --- –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª ---
document.getElementById("backBtn").addEventListener("click", () => {
  vibrate();
  document.getElementById("main-buttons").classList.remove("hidden");
  document.getElementById("mainMessage").classList.remove("show");
  document.getElementById("secret-message").style.display = "none";
  document.getElementById("musicPlayer").classList.add("hidden");
  document.getElementById("backBtn").classList.add("hidden");
  
  pauseCurrentTrack();
  stopBgMusic();
});

// --- –ü–µ—á–∞—Ç—å —Ç–µ–∫—Å—Ç–∞ –ø–æ –±—É–∫–≤–∞–º ---
function typeWriter(element, text, speed) {
  let i = 0;
  element.innerHTML = "";
  const fullText = text.replace(/<br>/g, '\n');

  function type() {
    if (i < fullText.length) {
      element.innerHTML += (fullText.charAt(i) === '\n' ? '<br>' : fullText.charAt(i));
      i++;
      setTimeout(type, speed);
    }
  }
  type();
}