// --- –ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç—ã ---
const bgMusic = document.getElementById("bg-music");
const audioPlayer = document.getElementById("audioPlayer");
const playPauseBtn = document.getElementById("playPauseBtn");
const prevBtn = document.getElementById("prevBtn");
const nextBtn = document.getElementById("nextBtn");
const musicTitle = document.querySelector(".music-title");
const musicCover = document.querySelector(".music-cover");

const tracks = [
  { title: "OMFG", src: "./tracks/OMFG.mp3", cover: "./default_cover.png" },
  { title: "Star Shopping", src: "./tracks/Star Shopping.mp3", cover: "./default_cover.png" },
  { title: "The Song They Played When I Crashed", src: "./tracks/The Song They Played When I Crashed.mp3", cover: "./default_cover.png" },
  { title: "Walk Away as the Door Slams (feat. Lil Tracy)", src: "./tracks/Walk Away as the Door Slams (feat. Lil Tracy).mp3", cover: "./default_cover.png" },
  { title: "i feel like", src: "./tracks/i feel like.mp3", cover: "./default_cover.png" },
  { title: "nothing to u", src: "./tracks/nothing to u.flac", cover: "./default_cover.png" },
  { title: "princess (unmastered)", src: "./tracks/princess (unmastered).mp3", cover: "./default_cover.png" },
  { title: "the way i see things", src: "./tracks/the way i see things.flac", cover: "./default_cover.png" },
  { title: "weird", src: "./tracks/weird.mp3", cover: "./default_cover.png" }
];

let currentTrack = 0;
let isPlaying = false;
let loadAttempts = 0;

// --- –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–µ–∫–∞ ---
function loadTrack(index) {
  const track = tracks[index];
  audioPlayer.src = track.src;
  musicTitle.textContent = track.title;
  musicCover.src = track.cover;

  fetch(track.src)
    .then(res => {
      if (!res.ok) throw new Error("Track not found");
      return res.blob();
    })
    .then(blob => {
      jsmediatags.read(blob, {
        onSuccess: function(tag) {
          const tags = tag.tags;
          if (tags.title) musicTitle.textContent = tags.title;
          if (tags.artist) musicTitle.textContent += ` - ${tags.artist}`;
          if (tags.picture) {
            const base64String = btoa(String.fromCharCode(...tags.picture.data));
            musicCover.src = `data:${tags.picture.format};base64,${base64String}`;
          }
        },
        onError: () => {}
      });
      loadAttempts = 0;
      if (isPlaying) playCurrentTrack();
    })
    .catch(err => {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", err);
      loadAttempts++;
      if (loadAttempts < 3) {
        setTimeout(() => loadTrack(index), 1000);
      } else {
        musicTitle.textContent = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–∫–∞";
        pauseCurrentTrack();
      }
    });
}

// --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º ---
function playCurrentTrack() {
  audioPlayer.play()
    .then(() => {
      isPlaying = true;
      playPauseBtn.textContent = "‚è∏";
      stopBgMusic();
    })
    .catch(e => {
      console.error("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:", e);
    });
}

function pauseCurrentTrack() {
  audioPlayer.pause();
  isPlaying = false;
  playPauseBtn.textContent = "‚ñ∂Ô∏è";
}

function playNextTrack() {
  currentTrack = (currentTrack + 1) % tracks.length;
  loadTrack(currentTrack);
}

function playPrevTrack() {
  currentTrack = (currentTrack - 1 + tracks.length) % tracks.length;
  loadTrack(currentTrack);
}

// --- –§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞ ---
function playBgMusic() {
  bgMusic.play().catch(e => console.error("BG Music error", e));
}

function stopBgMusic() {
  bgMusic.pause();
  bgMusic.currentTime = 0;
}

// --- –í–∏–±—Ä–∞—Ü–∏—è ---
function vibrate(duration = 100) {
  if ('vibrate' in navigator) navigator.vibrate(duration);
}

// --- DOM ---
document.addEventListener("DOMContentLoaded", () => {
  loadTrack(currentTrack);

  // –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
  document.body.addEventListener("click", () => {
    if (audioPlayer.src) {
      audioPlayer.play().then(() => audioPlayer.pause()).catch(() => {});
    }
    bgMusic.play().then(() => bgMusic.pause()).catch(() => {});
  }, { once: true });
});

// --- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ---
playPauseBtn.addEventListener("click", () => {
  vibrate();
  isPlaying ? pauseCurrentTrack() : playCurrentTrack();
});

prevBtn.addEventListener("click", () => {
  vibrate();
  playPrevTrack();
});

nextBtn.addEventListener("click", () => {
  vibrate();
  playNextTrack();
});

audioPlayer.addEventListener("ended", playNextTrack);

// --- –ö–Ω–æ–ø–∫–∞ ¬´–ú—É–∑—ã–∫–∞¬ª ---
document.getElementById("musicBtn").addEventListener("click", () => {
  vibrate();
  document.getElementById("main-buttons").classList.add("hidden");
  document.getElementById("musicPlayer").classList.remove("hidden");
  document.getElementById("backBtn").classList.remove("hidden");

  if (!isPlaying) {
    isPlaying = true;
    playCurrentTrack();
  }

  playPauseBtn.textContent = "‚è∏";
});

// --- –ö–Ω–æ–ø–∫–∞ ¬´–û—Ç–∫—Ä—ã—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ¬ª ---
document.getElementById("openBtn").addEventListener("click", () => {
  vibrate();
  document.getElementById("main-buttons").classList.add("hidden");
  document.getElementById("mainMessage").classList.add("show");
  document.getElementById("backBtn").classList.remove("hidden");

  const messageParagraph = document.querySelector("#mainMessage p");
  const fullText = `–î–æ—Ä–æ–≥–∞—è –ê–ª–∏—Å–∞!<br><br>–° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è —Ç–µ–±—è, —Å–æ–ª–Ω—Ü–µ ‚òÄÔ∏è<br>–ü—É—Å—Ç—å –≤ –∂–∏–∑–Ω–∏ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ —Å–≤–µ—Ç–∞, —Ç–µ–ø–ª–∞, –ª—é–±–≤–∏ –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞.<br>–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä —è—Ä—á–µ, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–∞—è—Å—å —Å–æ–±–æ–π.<br>–Ø –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —Ä–∞–¥, —á—Ç–æ —Ç—ã –µ—Å—Ç—å.<br><br>–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Å—Ç–∞–≤–∞–π –º–µ—á—Ç–∞—Ç—å ‚Äî —Ç—ã –¥–æ—Å—Ç–æ–π–Ω–∞ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æüíó<br><br>–° –ª—é–±–æ–≤—å—é –∏ —Å–∞–º—ã–º–∏ —Ç—ë–ø–ª—ã–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏ üí´<br><br>`;
  typeWriter(messageParagraph, fullText, 50);
  playBgMusic();
});

// --- –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª ---
document.getElementById("backBtn").addEventListener("click", () => {
  vibrate();
  document.getElementById("main-buttons").classList.remove("hidden");
  document.getElementById("mainMessage").classList.remove("show");
  document.getElementById("secret-message").style.display = "none";
  document.getElementById("musicPlayer").classList.add("hidden");
  document.getElementById("backBtn").classList.add("hidden");

  pauseCurrentTrack();
  stopBgMusic();
});

// --- –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ ---
document.getElementById("check-secret").addEventListener("click", () => {
  vibrate();
  const value = document.getElementById("secret-input").value.trim().toLowerCase();
  const div = document.getElementById("secret-message");

  document.getElementById("main-buttons").classList.add("hidden");
  div.style.display = 'block';
  document.getElementById("backBtn").classList.remove("hidden");

  if (value === "—á—É–¥–æ" || value === "—Ç—ã –º–æ—ë —á—É–¥–æ") {
    div.innerHTML = "üéâ –¢—ã –≤–≤–µ–ª–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ: —Ç—ã –º–æ—ë —á—É–¥–æ! üíñ";
  } else {
    div.innerHTML = "üòÖ –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!";
  }
});

// --- –ü–µ—á–∞—Ç—å –ø–æ –±—É–∫–≤–∞–º ---
function typeWriter(element, text, speed) {
  let i = 0;
  element.innerHTML = "";
  const fullText = text.replace(/<br>/g, '\n');

  function type() {
    if (i < fullText.length) {
      element.innerHTML += (fullText.charAt(i) === '\n' ? '<br>' : fullText.charAt(i));
      i++;
      setTimeout(type, speed);
    }
  }
  type();
}